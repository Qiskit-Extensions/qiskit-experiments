---
features:
  - |
    Adds ``backend``, ``analysis``, and ``target`` init kwargs to the
    :class:`~.StateTomography` and :class:`~.ProcessTomography` experiments.
    These allow specifying intended backend, a custom analysis class, or a
    custom target for fidelity calculations, when initializing the experiments.
  - |
    Improves :class:`.LocalMeasurementBasis` and `.LocalPreparationBasis`
    tomography basis classes support for initializing a noisy basis for
    performing state preparation and measurement error mitigated
    :class:`.StateTomography` and :class:`.ProcessTomography` experiments.

    For preparation bases, a noisy reset operation on a specific qubit,
    or subset of qubits, can now be input as a quantum channel, and the
    noisy prepared states are generated by applying the ideal instructions
    to the noisy initial state.

    For measurement basis a noisy POVM or quantum channel can be supplied for
    the 0-index basis (typically the Z-basis), and other bases index POVMs will
    be generated by applying the ideal inverse instructions to the noisy POVMS.
  - |
    Adds an optional ``mitigator`` kwarg to :class:`.PauliMeasurementBasis`
    which can be used to initialize the basis with a
    :class:`.LocalReadoutMitigator` to construct a readout error mitigated
    basis for use with :class:`.StateTomography` and
    :class:`.ProcessTomography` experiments.
  
    The :class:`.LocalReadoutError` experiment can be run to obtain the 
    :class:`.LocalReadoutMitigator` from its analysis results.
  - |
    Adds readout error mitigated tomography experiments
    :class:`.MitigatedStateTomography` and :class:`.MitigatedProcessTomography`.
    These are both implemented as a :class:`.BatchExperiment` consisting of a
    :class:`~.LocalReadoutError` characterization experiment followed by either
    a :class:`~.StateTomography` or class:`~.ProcessTomography` experiment.
  - |
    Adds conditional component tomography support to the
    :class:`.StateTomography` and :class:`.ProcessTomography` experiments.
    This allows either conditioning on classical bit values in the tomography
    circuit and returning a list of the fitted components for each
    conditional value of the conditioning bits.
  - |
    Adds conditional component fitting support to the fitter functions for
    tomography experiments.
fixes:
  - |
    Fixes bug in :class:`~.StateTomography` and :class:`~.ProcessTomography`
    experiments where if the input circuit contained conditional instructions
    with multiple classical registers the tomography measurement circuits
    would contain incorrect conditionals due to a bug in the
    :meth:`.QuantumCircuit.compose` method.

    See Issue #942 <https://github.com/Qiskit/qiskit-experiments/issues/943>`_
    for additional details.
upgrade:
  - |
    Renames the ``qubits``, ``measurement_qubits``, and ``preparation_qubits``
    init kwargs of :class:`~.StateTomography`,
    :class:`~.ProcessTomography`, and :class:`~.TomographyExperiment` to
    ``physical_qubits``, ``measurement_indices`` and ``preparation_indices``
    respectively. This is to make the intended use of these kwargs more clear
    as the measurement and preparation args refer to the index of circuit
    qubits in the physical qubits list, not the physical qubit values
    themselves.
  - |
    The automatic overriding of the default CVXPY SDP solver for the
    `"cvxpy_gaussian_lstsq"` and `"cvxpy_linear_lstsq"` has been disabled
    and will now use the default SDP solver of CVXPY unless a custom solver
    is set using the ``fitter_options`` analysis options.
deprecations:
  - |
    Renames the ``qubits``, ``measurement_qubits``, and ``preparation_qubits``
     init kwargs of :class:`~.StateTomography`,
    :class:`~.ProcessTomography`, and :class:`~.TomographyExperiment` have
    been deprecated. They have been replaced with kwargs ``physical_qubits``,
    ``measurement_indices`` and ``preparation_indices`` respectively. The
    renamed kwargs have the same functionality as the deprecated kwargs.
