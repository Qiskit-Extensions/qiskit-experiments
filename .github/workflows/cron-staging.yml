name: Cron-staging
on:
  schedule:
    - cron: "0 4 * * *"
  workflow_dispatch:

jobs:
  experiment-integration:
    name: experiment-integration
    runs-on: macOS-latest
    env:
      QISKIT_IBM_STAGING_API_TOKEN: ${{ secrets.QISKIT_IBM_STAGING_API_TOKEN }}
      QISKIT_IBM_STAGING_API_URL: ${{ secrets.QISKIT_IBM_STAGING_API_URL }}
      QISKIT_IBM_STAGING_DEVICE: "ibmq_qasm_simulator"
      QISKIT_IBM_USE_STAGING_CREDENTIALS: True
      LOG_LEVEL: DEBUG
      STREAM_LOG: True
      QISKIT_IN_PARALLEL: True
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install Deps
        run: python -m pip install -U tox setuptools virtualenv wheel
      - name: Run Tests
        run: tox -epy38 -- -n test/database_service/test_experiment_data_integration.py
  terra-main-tests:
    name: tests-python${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]
        os: ["ubuntu-latest", "macOS-latest", "windows-latest"]
    steps:
      - name: Print Concurrency Group
        env:
          CONCURRENCY_GROUP: ${{ github.repository }}-${{ github.ref }}-${{ github.head_ref }}
        run: |
          echo -e "\033[31;1;4mConcurrency Group\033[0m"
          echo -e "$CONCURRENCY_GROUP\n"
        shell: bash
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-${{ hashFiles('setup.py','requirements.txt','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}
      - name: Install Deps
        run: python -m pip install -U tox setuptools virtualenv wheel
      - name: Install and Run Tests
        run: tox -e terra-main
        if: runner.os != 'macOS'
      - name: Install and Run Tests
        run: tox -e terra-main
        if: runner.os == 'macOS'
        env:
          OMP_NUM_THREADS: 1