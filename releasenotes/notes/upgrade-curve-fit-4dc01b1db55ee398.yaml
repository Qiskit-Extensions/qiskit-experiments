---
upgrade:
  - |
    The :class:`CurveAnalysis` class has been updated to use the covariance between fit
    parameters in the error propagation. This will provide more accurate standard
    error for your fit values.
  - |
    The data format of analysis result data value has been replaced from
    :class:`FitVal` to :class:`UFloat` to support error propatation for
    post analysis computation.

    .. code-block:: python

      expdata = T1(0, delays, backend).run()
      fit_t1 = expdata.analysis_results("T1").value

      assert isinstance(fit_t1, UFloat)

      new_value = fit_t1 / 2
      new_value.std_dev  # show new standard error value

    Now ``fit_t1`` value is :class:`UFloat` instance with
    new properties :attr:`.nominal_value` and :attr:`.std_dev`,
    and you can directly apply methematical operation to this object.
    New error value is predicted by linear error propagation theory.
    Note that you no longer need to separately compute standard error.

    This computation is offered by the uncertainties (https://pythonhosted.org/uncertainties/)
    package which is a requirement since from Qiskit Experiments v0.2.
    The functions supporting error propagation is also available in ``uncertainties.umath``.
  - |
    The curve fit plot generated by the :class:`CurveAnalysis` shows a
    confidence interval properly computed with error propagation.
    By default it shows 1 sigma and 3 sigma region but you can customize this
    via the ``style`` option of the curve analysis subclass.
  - |
    In the analysis result object, :attr:``.unit`` property that is attached to :class:`FitVal`
    has been moved to :attr:`.extra` as metadata.
deprecations:
  - |
    The :class:`FitVal` class had been deprecated and being replaced with :class:`UFloat`.
    The saved analysis result containing the deprecated :class:`FitVal` can be
    still loaded with `FutureWarning` and implicitly typecasted into :class:`UFloat`.
    The old properties :attr:`.value` and :attr:`.stddev` are backported so that
    this doesn't induce any breaking API change. However, it is expected the loaded analysis result
    will be saved again to override the deprecated data format with :class:`UFloat`.
