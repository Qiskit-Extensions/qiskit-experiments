---
feature:
  - |
    Added a :meth:`~qiskit_experiments.framework.BaseAnalysis.set_options`
    method and :meth:`~qiskit_experiments.framework.BaseAnalysis.options`
    property to the :class:`qiskit_experiments.framework.BaseAnalysis` class
    to store and retrieve any analysis options in the state of the analysis
    instance.
  - |
    The ``analysis`` kwarg of
    :meth:`qiskit_experiments.framework.BaseExperiment.run` can now optionally
    be passed a :class:`qiskit_experiments.framework.BaseAnalysis` instance to
    use for analysis of that single execution. If no instance is provided the
    current stored :meth:`~qiskit_experiments.framework.BaseExperiment.analysis`
    instance for that experiment will be used.
    Setting ``analysis=None`` or ``analysis=False`` still disables analysis
    for the specific execution.
upgrade:
  - |
    The :meth:`qiskit_experiments.framework.BaseExperiment.analysis` property
    has been changed to return a :class:`qiskit_experiments.framework.BaseAnalysis`
    *instance* rather than a class type. This method also now has a setter
    which allows setting an analysis instance for use by an experiment.
deprecations:
  - |
    The :meth:`qiskit_experiments.framework.BaseExperiment.set_analysis_options`
    method has been deprecated, use the
    :meth:`qiskit_experiments.framework.BaseAnalysis.set_options` method
    for the experiments analysis class instead. This can be accessed from the
    experiment instance using the 
    :meth:`qiskit_experiments.framework.BaseExperiment.analysis` property as
    ``experiment.analysis.set_options(**options)``.
  - |
    The :meth:`qiskit_experiments.framework.BaseExperiment.analysis_options`
    property has been deprecated, use the
    :meth:`qiskit_experiments.framework.BaseAnalysis.options` property
    for the experiments analysis class instead. This can be accessed from the
    experiment instance using the 
    :meth:`qiskit_experiments.framework.BaseExperiment.analysis` property as
    ``experiment.analysis.options``.
  - |
    The :meth:`qiskit_experiments.framework.BaseExperiment.run_analysis` and
    method has been deprecated, use the
    :meth:`qiskit_experiments.framework.BaseAnalysis.run` method
    for the experiments analysis class instead. This can be accessed from the
    experiment instance using the 
    :meth:`qiskit_experiments.framework.BaseExperiment.analysis` property as
    ``experiment.analysis.run(**kwargs)``.
developer:
  - |
    The :class:`qiskit_experiments.framework.BaseAnalysis` class has
    been changed to be an initialized class.
    
    This class now stores its set analysis options using the
    :meth:`~qiskit_experiments.framework.BaseAnalysis.set_options` and
    :meth:`~qiskit_experiments.framework.BaseAnalysis.options` and
    ``_default_options`` methods.
    The signature of the abstract method ``_run_analysis`` that must be
    implemented by subclasses has been changed to remove the ``**kwargs``.

    Note that the state of this class should only be used to store option
    values and derived configuration. The
    :meth:`~qiskit_experiments.framework.BaseAnalysis.run` and
    ``_run_analysis`` methods should not change the state of the instance.
  - |
    The :class:`qiskit_experiments.framework.BaseExperiment` class has
    been changed to optionally store an instance of a
    :class:`qiskit_experiments.framework.BaseAnalysis` class  during
    its initialization. Any default analysis options specific to a
    particular experiment subclass should be set during that experiments
    init method, or as default options of the analysis subclass used by
    that experiment.
